{"ast":null,"code":"export default function checkDuplicateRouteNames(state) {\n  const duplicates = [];\n  const getRouteNames = (location, state) => {\n    state.routes.forEach(route => {\n      var _route$state, _route$state$routeNam;\n      const currentLocation = location ? `${location} > ${route.name}` : route.name;\n      (_route$state = route.state) === null || _route$state === void 0 ? void 0 : (_route$state$routeNam = _route$state.routeNames) === null || _route$state$routeNam === void 0 ? void 0 : _route$state$routeNam.forEach(routeName => {\n        if (routeName === route.name) {\n          duplicates.push([currentLocation, `${currentLocation} > ${route.name}`]);\n        }\n      });\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n  getRouteNames('', state);\n  return duplicates;\n}","map":{"version":3,"mappings":"AAEA,eAAe,SAASA,wBAAwB,CAACC,KAAsB,EAAE;EACvE,MAAMC,UAAsB,GAAG,EAAE;EAEjC,MAAMC,aAAa,GAAG,CACpBC,QAAgB,EAChBH,KAAsD,KACnD;IACHA,KAAK,CAACI,MAAM,CAACC,OAAO,CAAEC,KAA6B,IAAK;MAAA;MACtD,MAAMC,eAAe,GAAGJ,QAAQ,GAC3B,GAAEA,QAAS,MAAKG,KAAK,CAACE,IAAK,EAAC,GAC7BF,KAAK,CAACE,IAAI;MAEd,qBAAK,CAACR,KAAK,0EAAXS,aAAaC,UAAU,0DAAvBC,sBAAyBN,OAAO,CAAEO,SAAS,IAAK;QAC9C,IAAIA,SAAS,KAAKN,KAAK,CAACE,IAAI,EAAE;UAC5BP,UAAU,CAACY,IAAI,CAAC,CACdN,eAAe,EACd,GAAEA,eAAgB,MAAKD,KAAK,CAACE,IAAK,EAAC,CACrC,CAAC;QACJ;MACF,CAAC,CAAC;MAEF,IAAIF,KAAK,CAACN,KAAK,EAAE;QACfE,aAAa,CAACK,eAAe,EAAED,KAAK,CAACN,KAAK,CAAC;MAC7C;IACF,CAAC,CAAC;EACJ,CAAC;EAEDE,aAAa,CAAC,EAAE,EAAEF,KAAK,CAAC;EAExB,OAAOC,UAAU;AACnB","names":["checkDuplicateRouteNames","state","duplicates","getRouteNames","location","routes","forEach","route","currentLocation","name","_route$state","routeNames","_route$state$routeNam","routeName","push"],"sources":["/Users/ricky/Library/CloudStorage/OneDrive-nyu.edu/NYU 2023 Spring Semester/CS-UY 4523/react_project/Food-Your-Way-Frontend/flask_react/node_modules/@react-navigation/core/src/checkDuplicateRouteNames.tsx"],"sourcesContent":["import type { NavigationState, PartialState } from '@react-navigation/routers';\n\nexport default function checkDuplicateRouteNames(state: NavigationState) {\n  const duplicates: string[][] = [];\n\n  const getRouteNames = (\n    location: string,\n    state: NavigationState | PartialState<NavigationState>\n  ) => {\n    state.routes.forEach((route: typeof state.routes[0]) => {\n      const currentLocation = location\n        ? `${location} > ${route.name}`\n        : route.name;\n\n      route.state?.routeNames?.forEach((routeName) => {\n        if (routeName === route.name) {\n          duplicates.push([\n            currentLocation,\n            `${currentLocation} > ${route.name}`,\n          ]);\n        }\n      });\n\n      if (route.state) {\n        getRouteNames(currentLocation, route.state);\n      }\n    });\n  };\n\n  getRouteNames('', state);\n\n  return duplicates;\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}